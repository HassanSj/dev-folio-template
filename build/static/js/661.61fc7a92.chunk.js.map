{"version":3,"file":"static/js/661.61fc7a92.chunk.js","mappings":"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","sources":["components/Button.jsx","components/SlideBar.jsx","components/PageHeading.jsx","components/modal/CloseModalButton.jsx","hooks/useDarkMode.js","components/modal/ThemeToggler.jsx","components/modal/Modal.jsx","components/TextArea.jsx","components/TextField.jsx","components/contact/ContactForm.jsx","components/contact/ContactIcons.jsx","components/contact/ContactTypography.jsx","components/contact/ContactDetails.jsx","components/contact/ContactInfo.jsx","components/contact/ContactSection.jsx","pages/ContactPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst Button = ({ children, disabled, ...otherProps }) => {\r\n  return (\r\n    <ButtonContainer {...otherProps} disabled={disabled}>\r\n      <ClipLoader size={25} loading={disabled} />\r\n      {!disabled && children}\r\n    </ButtonContainer>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nconst ButtonContainer = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-weight: 400;\r\n  border: none;\r\n  outline: none;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.primary};\r\n  border-radius: 30px;\r\n  color: ${({ theme }) => theme.grey[100]};\r\n  font-size: 14px;\r\n  width: 10rem;\r\n  height: 2.8rem;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    box-shadow: 4px 10px 14px rgba(0, 171, 85, 0.15);\r\n    transition: all 0.25s ease-in-out;\r\n  }\r\n  @media (max-width: 767.98px) {\r\n    width: 10rem;\r\n    height: 2.6rem;\r\n    font-size: 12px;\r\n  }\r\n  @media (max-width: 479.98px) {\r\n    width: 10rem;\r\n    height: 2.5rem;\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-align: center;\r\n  }\r\n  @media (max-width: 319.98px) {\r\n    width: 9.5rem;\r\n    height: 2.3rem;\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-align: center;\r\n  }\r\n\r\n  span {\r\n    background: transparent !important;\r\n    border-radius: 100%;\r\n    border: 2px solid;\r\n    border-color: ${({ theme }) => theme.grey[100]};\r\n    border-bottom-color: transparent;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst SlideBar = () => {\r\n  return (\r\n    <SlideBarContainer>\r\n      <span></span>\r\n      <span></span>\r\n    </SlideBarContainer>\r\n  );\r\n};\r\n\r\nexport default SlideBar;\r\n\r\nconst leftToRight = keyframes`\r\n  0% {\r\n    -webkit-transform: translateX(0);\r\n            transform: translateX(0);\r\n  }\r\n  100% {\r\n    -webkit-transform: translateX(100px);\r\n            transform: translateX(100px);\r\n\r\n  }\r\n`;\r\n\r\nconst SlideBarContainer = styled.div`\r\n  width: 100px;\r\n  height: 4px;\r\n  background-color: ${({ theme }) => theme.primary};\r\n  display: flex;\r\n  gap: 4px;\r\n\r\n  @media (max-width: 767.98px) {\r\n    width: 80px;\r\n  }\r\n\r\n  @media (max-width: 479.98px) {\r\n    width: 60px;\r\n  }\r\n\r\n  span {\r\n    height: 100%;\r\n    width: 4px;\r\n    background-color: ${({ theme }) => theme.background};\r\n    opacity: 1 !important;\r\n    animation: ${leftToRight} 3.5s linear forwards;\r\n    animation-iteration-count: infinite;\r\n\r\n    @media (max-width: 767.98px) {\r\n      animation: ${leftToRight} 3s linear forwards;\r\n      animation-iteration-count: infinite;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      animation: ${leftToRight} 2.5s linear forwards;\r\n      animation-iteration-count: infinite;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SlideBar from \"./SlideBar\";\r\n\r\nconst PageHeading = ({ slidebar, children, subline, style }) => {\r\n  return (\r\n    <PageHeadingContainer style={style}>\r\n      <span>{subline}</span>\r\n      <h2>{children}</h2>\r\n      {slidebar && <SlideBar />}\r\n    </PageHeadingContainer>\r\n  );\r\n};\r\n\r\nexport default PageHeading;\r\n\r\nconst PageHeadingContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-bottom: 15px;\r\n  span {\r\n    font-size: 14px;\r\n    font-style: Poppins, sans-serif;\r\n    color: ${({ theme }) => theme.secondary};\r\n    opacity: 0.7;\r\n    font-weight: 400;\r\n    @media (max-width: 767.98px) {\r\n      font-size: 11px;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 10px;\r\n    }\r\n  }\r\n  h2 {\r\n    color: ${({ theme }) => theme.secondary};\r\n    font-size: 46px;\r\n    font-weight: 700;\r\n    letter-spacing: -0.25px;\r\n    line-height: 100%;\r\n    margin-bottom: 20px;\r\n\r\n    @media (max-width: 767.98px) {\r\n      font-size: 32px;\r\n      font-weight: 600;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 24px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CloseModalButton = ({ onClick }) => {\r\n  return (\r\n    <CloseModalButtonContainer onClick={onClick}>\r\n      <GrClose size={30} />\r\n    </CloseModalButtonContainer>\r\n  );\r\n};\r\n\r\nexport default CloseModalButton;\r\n\r\nconst CloseModalButtonContainer = styled.div`\r\n  position: fixed;\r\n  cursor: pointer;\r\n  z-index: 999;\r\n  top: 30px;\r\n  right: 60px;\r\n  @media (max-width: 767.98px) {\r\n    right: 25px;\r\n  }\r\n\r\n  svg {\r\n    @media (max-width: 767.98px) {\r\n      height: 20px;\r\n      width: 20px;\r\n    }\r\n    path {\r\n      stroke: ${({ theme }) => theme.secondary};\r\n    }\r\n    :hover {\r\n      path {\r\n        stroke: ${({ theme }) => theme.primary};\r\n        transition: all 0.35s ease;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectorTheme, switchTheme } from \"../features/theme/themeSlice\";\r\n\r\nconst THEMES = {\r\n  LIGHT: \"light\",\r\n  DARK: \"dark\",\r\n};\r\n\r\nconst useDarkTheme = () => {\r\n  const theme = useSelector(selectorTheme);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", theme);\r\n  }, [theme]);\r\n  const dispatch = useDispatch();\r\n  const themeToggler = () => {\r\n    theme === THEMES.LIGHT\r\n      ? dispatch(switchTheme(THEMES.DARK))\r\n      : dispatch(switchTheme(THEMES.LIGHT));\r\n  };\r\n\r\n  return [theme, themeToggler];\r\n};\r\n\r\nexport default useDarkTheme;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MdLightMode, MdNightlight } from \"react-icons/md\";\r\nimport useDarkTheme from \"../../hooks/useDarkMode\";\r\n\r\nconst ThemeToggler = () => {\r\n  const [theme, themeToggler] = useDarkTheme();\r\n  return (\r\n    <ThemeTogglerContainer onClick={themeToggler}>\r\n      {theme === \"light\" ? (\r\n        <MdNightlight size={25} />\r\n      ) : (\r\n        <MdLightMode size={25} />\r\n      )}\r\n    </ThemeTogglerContainer>\r\n  );\r\n};\r\n\r\nexport default ThemeToggler;\r\nconst ThemeTogglerContainer = styled.div`\r\n  background-color: ${({ theme }) => theme.card};\r\n  box-shadow: 2px 6px 14px rgba(0, 0, 0, 0.2);\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  z-index: 999;\r\n\r\n  position: fixed;\r\n  right: 40px;\r\n  bottom: 30px;\r\n\r\n  @media (max-width: 767.98px) {\r\n    right: 20px;\r\n    bottom: 30px;\r\n  }\r\n\r\n  svg {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { css } from \"styled-components\";\r\nimport CloseModalButton from \"./CloseModalButton\";\r\nimport ThemeToggler from \"./ThemeToggler\";\r\n\r\nconst Modal = ({ children, to = \"/\" }) => {\r\n  const navigate = useNavigate();\r\n  const [show, setShow] = React.useState(true);\r\n  const [render, setRender] = React.useState(show);\r\n\r\n  const toggleShow = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (show) setRender(true);\r\n  }, [show]);\r\n\r\n  const onAnimationEnd = () => {\r\n    if (!show) navigate(to);\r\n  };\r\n\r\n  return createPortal(\r\n    render && (\r\n      <ModalContainer onAnimationEnd={onAnimationEnd} show={show}>\r\n        <CloseModalButton onClick={toggleShow} />\r\n        <ThemeToggler />\r\n        {children}\r\n      </ModalContainer>\r\n    ),\r\n    document.getElementById(\"modal_root\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nconst slideTop = keyframes`\r\n  0% {\r\n    -webkit-transform: translateY(100vh);\r\n            transform: translateY(100vh);\r\n  }\r\n  100% {\r\n    -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n  }\r\n`;\r\nconst slideDown = keyframes`\r\n  0% {\r\n    -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n  }\r\n  100% {\r\n    -webkit-transform: translateY(100vh);\r\n            transform: translateY(100vh);\r\n  }\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: ${({ theme }) => theme.background};\r\n  color: ${({ theme }) => theme.secondary};\r\n  animation: ${({ show }) =>\r\n    show\r\n      ? css`\r\n          ${slideTop} 0.75s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\r\n        `\r\n      : css`\r\n          ${slideDown} 0.75s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\r\n        `};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TextArea = ({\r\n  placeholder = \"Placeholder\",\r\n  children,\r\n  onChange,\r\n  ...otherProps\r\n}) => {\r\n  return (\r\n    <TextAreaContainer\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n      {...otherProps}\r\n    >\r\n      {children}\r\n    </TextAreaContainer>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n\r\nconst TextAreaContainer = styled.textarea`\r\n  font-family: \"Poppins\", sans-serif;\r\n  background-color: ${({ theme }) => theme.card};\r\n  border: none;\r\n  color: #777;\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 0;\r\n  font-size: 15px;\r\n  padding: 9px 14px;\r\n  background-clip: padding-box;\r\n  resize: vertical;\r\n  min-height: 150px;\r\n  display: block;\r\n  line-height: 1.5;\r\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  width: 100%;\r\n  /* box-shadow: 1px 3px 7px rgba(0, 0, 0, 0.2); */\r\n\r\n  @media (max-width: 1023.98px) {\r\n    font-size: 15px;\r\n    min-height: 130px;\r\n  }\r\n  @media (max-width: 767.98px) {\r\n    font-size: 13px;\r\n    min-height: 120px;\r\n  }\r\n  @media (max-width: 479.98px) {\r\n    font-size: 12px;\r\n    min-height: 100px;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: #777;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 1px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TextField = ({\r\n  type = \"text\",\r\n  name = \"name\",\r\n  placeholder = \"Placeholder\",\r\n  onChange,\r\n  ...otherProps\r\n}) => {\r\n  return (\r\n    <TextFieldContainer>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        {...otherProps}\r\n      />\r\n    </TextFieldContainer>\r\n  );\r\n};\r\n\r\nexport default TextField;\r\n\r\nconst TextFieldContainer = styled.div`\r\n  input {\r\n    font-family: \"Poppins\", sans-serif;\r\n    background-color: ${({ theme }) => theme.card};\r\n    border: none;\r\n    color: #777;\r\n    border-bottom: 1px solid ${({ theme }) => theme.border};\r\n    border-radius: 0;\r\n    font-size: 15px;\r\n    height: 44px;\r\n    padding: 9px 14px;\r\n    background-clip: padding-box;\r\n    display: block;\r\n    line-height: 1.5;\r\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n    width: 100%;\r\n    /* box-shadow: 1px 3px 7px rgba(0, 0, 0, 0.2); */\r\n\r\n    @media (max-width: 1023.98px) {\r\n      font-size: 15px;\r\n      height: 42px;\r\n    }\r\n    @media (max-width: 767.98px) {\r\n      font-size: 13px;\r\n      height: 36px;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 12px;\r\n      height: 32px;\r\n    }\r\n\r\n    ::placeholder {\r\n      color: #777;\r\n    }\r\n    :-webkit-autofill {\r\n      -webkit-box-shadow: 0 0 0 50px ${({ theme }) => theme.card} inset; /* Change the color to your own background color */\r\n      -webkit-text-fill-color: #777;\r\n    }\r\n\r\n    :focus {\r\n      outline: none;\r\n      border: none;\r\n      border-bottom: 1px solid ${({ theme }) => theme.primary};\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SnackBar from \"my-react-snackbar\";\r\nimport axios from \"axios\";\r\nimport TextArea from \"../TextArea\";\r\nimport TextField from \"../TextField\";\r\nimport Button from \"../Button\";\r\n\r\nconst ContactForm = () => {\r\n  const [state, setState] = useState({\r\n    submitting: false,\r\n    succeeded: false,\r\n    error: false,\r\n  });\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subjects: \"\",\r\n    message: \"\",\r\n    _template: \"table\",\r\n    _subject: \"New Message | SK Portfolio\",\r\n  });\r\n\r\n  const handleChange = async (e) => {\r\n    const { name, value } = e.target;\r\n    await setForm((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setState({\r\n      ...state,\r\n      succeeded: false,\r\n      submitting: true,\r\n    });\r\n    axios\r\n      .post(\"https://formsubmit.co/ajax/sajjadhassa389@gmail.com\", form)\r\n      .then(() => {\r\n        setState({\r\n          ...state,\r\n          submitting: false,\r\n          succeeded: true,\r\n        });\r\n        setForm({\r\n          ...form,\r\n          name: \"\",\r\n          email: \"\",\r\n          subjects: \"\",\r\n          message: \"\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            submitting: false,\r\n            succeeded: false,\r\n            error: true,\r\n          };\r\n        });\r\n        console.log(\"Error! \", e.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ContactFormContainer onSubmit={handleSubmit}>\r\n      <SnackBar\r\n        open={state.error}\r\n        message={\"Message sent failed!\"}\r\n        position=\"top-right\"\r\n        type=\"error\"\r\n        timeout={5000}\r\n      />\r\n      <SnackBar\r\n        open={state.succeeded}\r\n        message={\"Message sent successfully!\"}\r\n        position=\"top-right\"\r\n        type=\"success\"\r\n        color=\"#00AB55\"\r\n        timeout={5000}\r\n      />\r\n      <h4>Message Me</h4>\r\n      <span>\r\n        <TextField\r\n          id=\"name\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          value={form.name}\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          type=\"email\"\r\n          onChange={handleChange}\r\n          value={form.email}\r\n          required\r\n        />\r\n      </span>\r\n      <TextField\r\n        id=\"subjects\"\r\n        name=\"subjects\"\r\n        placeholder=\"Subject\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        onChange={handleChange}\r\n        value={form.subjects}\r\n        required\r\n      />\r\n      <TextArea\r\n        id=\"message\"\r\n        name=\"message\"\r\n        placeholder=\"Message\"\r\n        autoComplete=\"off\"\r\n        onChange={handleChange}\r\n        value={form.message}\r\n        required\r\n      ></TextArea>\r\n      <ButtonContainer>\r\n        <Button type=\"submit\" disabled={state.submitting}>\r\n          Send Message\r\n        </Button>\r\n      </ButtonContainer>\r\n    </ContactFormContainer>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nconst ButtonContainer = styled.div``;\r\n\r\nconst ContactFormContainer = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n\r\n  span {\r\n    display: flex;\r\n    gap: 20px;\r\n\r\n    @media (max-width: 479.98px) {\r\n      flex-direction: column;\r\n    }\r\n\r\n    div {\r\n      flex: 0.5;\r\n    }\r\n  }\r\n\r\n  h4 {\r\n    font-family: \"Poppins\", sans-serif;\r\n    font-weight: 500;\r\n    font-size: 26px;\r\n    line-height: 1.2;\r\n    letter-spacing: -0.4px;\r\n    color: ${({ theme }) => theme.secondary};\r\n\r\n    @media (max-width: 1023.98px) {\r\n      font-size: 22px;\r\n    }\r\n    @media (max-width: 767.98px) {\r\n      font-size: 20px;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 18px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SiIonic } from \"react-icons/si\";\r\nimport { FaPhoneAlt } from \"react-icons/fa\";\r\nimport { IoMapSharp, IoSend } from \"react-icons/io5\";\r\n\r\nconst ContactIcons = () => {\r\n  return (\r\n    <ContactIconsContainer>\r\n      <SiIonic size={30} />\r\n      <IoMapSharp size={30} />\r\n      <FaPhoneAlt size={30} />\r\n      <IoSend size={30} />\r\n    </ContactIconsContainer>\r\n  );\r\n};\r\n\r\nexport default ContactIcons;\r\n\r\nconst ContactIconsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  flex: 0.2;\r\n  svg {\r\n    color: ${({ theme }) => theme.primary};\r\n    margin-bottom: 15px;\r\n\r\n    @media (max-width: 767.98px) {\r\n      width: 28px;\r\n      height: 28px;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      width: 25px;\r\n      height: 25px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContactTypography = () => {\r\n  return (\r\n    <ContactTypographyContainer>\r\n      <div>\r\n        <h5>Name</h5>\r\n        <p>Hassan Sajjad</p>\r\n      </div>\r\n      <div>\r\n        <h5>Location</h5>\r\n        <p>Westridge Rawalpindi Cantt Punjab, Pakistan</p>\r\n      </div>\r\n      <div>\r\n        <h5>Call Me</h5>\r\n        <p>+92 313 1512576</p>\r\n      </div>\r\n      <div>\r\n        <h5>Email Me</h5>\r\n        <p>\r\n          <a\r\n            href=\"mailto:sajjadhassa389@gmail.com\"\r\n            style={{\r\n              opacity: \"1\",\r\n            }}\r\n          >\r\n            sajjadhassa389@gmail.com\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </ContactTypographyContainer>\r\n  );\r\n};\r\n\r\nexport default ContactTypography;\r\n\r\nconst ContactTypographyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n\r\n  div {\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  h5 {\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    line-height: 1.2;\r\n\r\n    @media (max-width: 1023.98px) {\r\n      font-size: 13px;\r\n      font-weight: 500;\r\n    }\r\n    @media (max-width: 767.98px) {\r\n      font-size: 12px;\r\n      font-weight: 500;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 10px;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n  p a {\r\n    display: block;\r\n    text-decoration: none;\r\n    font-weight: 400;\r\n    opacity: 1;\r\n    color: ${({ theme }) => theme.primary};\r\n\r\n    :hover {\r\n      opacity: 0.7;\r\n      transition: all 1.2s ease;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContactIcons from \"./ContactIcons\";\r\nimport ContactTypography from \"./ContactTypography\";\r\n\r\nconst ContactDetails = () => {\r\n  return (\r\n    <ContactDetailsContainer>\r\n      <ContactIcons />\r\n      <Separator></Separator>\r\n      <ContactTypography />\r\n    </ContactDetailsContainer>\r\n  );\r\n};\r\n\r\nexport default ContactDetails;\r\n\r\nconst ContactDetailsContainer = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  flex: 1;\r\n`;\r\nconst Separator = styled.span`\r\n  width: 2px;\r\n  height: 100% !important;\r\n  background-color: ${({ theme }) => theme.secondary};\r\n  opacity: 0.3;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContactDetails from \"./ContactDetails\";\r\n\r\nconst ContactInfo = () => {\r\n  return (\r\n    <ContactInfoContainer>\r\n      <h4>Contact Info</h4>\r\n      <p>\r\n        Always available for freelance work if the right project comes along,\r\n        Feel free to contact me!\r\n      </p>\r\n      <ContactDetails />\r\n    </ContactInfoContainer>\r\n  );\r\n};\r\n\r\nexport default ContactInfo;\r\n\r\nconst ContactInfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  h4 {\r\n    font-family: \"Poppins\", sans-serif;\r\n    font-weight: 500;\r\n    font-size: 26px;\r\n    line-height: 1.2;\r\n    letter-spacing: -0.4px;\r\n    color: ${({ theme }) => theme.secondary};\r\n\r\n    @media (max-width: 1023.98px) {\r\n      font-size: 22px;\r\n    }\r\n    @media (max-width: 767.98px) {\r\n      font-size: 20px;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  p {\r\n    color: ${({ theme }) => theme.secondary};\r\n    font-family: \"Poppins\", sans-serif;\r\n    font-size: 14px;\r\n    font-weight: 300;\r\n    line-height: 1.95;\r\n    opacity: 0.7;\r\n    @media (max-width: 1023.98px) {\r\n      font-size: 11px;\r\n    }\r\n    @media (max-width: 767.98px) {\r\n      font-size: 12px;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 10px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport ContactInfo from \"./ContactInfo\";\r\n\r\nconst ContactSection = () => {\r\n  return (\r\n    <ContactSectionContainer>\r\n      <Left>\r\n        <ContactForm />\r\n      </Left>\r\n      <Right>\r\n        <ContactInfo />\r\n      </Right>\r\n    </ContactSectionContainer>\r\n  );\r\n};\r\n\r\nexport default ContactSection;\r\n\r\nconst Right = styled.div`\r\n  flex: 0.4;\r\n`;\r\nconst Left = styled.div`\r\n  flex: 0.6;\r\n`;\r\n\r\nconst ContactSectionContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 60px;\r\n  margin-top: 30px;\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n  flex: 1;\r\n\r\n  @media (max-width: 767.98px) {\r\n    flex-direction: column;\r\n    gap: 60px;\r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n  }\r\n  @media (max-width: 479.98px) {\r\n    gap: 50px;\r\n    margin-top: 20px;\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContactSection from \"../components/contact/ContactSection\";\r\nimport Modal from \"../components/modal/Modal\";\r\nimport PageHeading from \"../components/PageHeading\";\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n    <Modal>\r\n      <ContactPageContainer>\r\n        <PageHeading subline={\"Feel free to contact me anytimes\"} slidebar>\r\n          Get in Touch\r\n        </PageHeading>\r\n        <ContactSection />\r\n      </ContactPageContainer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n\r\nconst ContactPageContainer = styled.div`\r\n  overflow-y: scroll;\r\n  max-height: 100vh;\r\n  padding: 0 550px;\r\n  padding-top: 60px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  gap: 20px;\r\n  flex: 1;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  @media (max-width: 2559.98px) {\r\n    padding: 0 260px;\r\n    padding-top: 50px;\r\n  }\r\n  @media (max-width: 1439.98px) {\r\n    padding: 0 120px;\r\n    padding-top: 60px;\r\n  }\r\n  @media (max-width: 1023.98px) {\r\n    padding: 0 100px;\r\n    padding-top: 60px;\r\n  }\r\n  @media (max-width: 767.98px) {\r\n    padding: 0 40px;\r\n    padding-top: 60px;\r\n  }\r\n  @media (max-width: 479.98px) {\r\n    padding: 0 30px;\r\n    padding-top: 60px;\r\n  }\r\n\r\n  @media (max-width: 424.98px) {\r\n    padding: 0 15px;\r\n    padding-top: 60px;\r\n  }\r\n\r\n  /* overflow-x: hidden; */\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    background: transparent;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${({ theme }) => theme.scrollBar};\r\n    border-radius: 5px;\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n"],"names":["_ref","children","disabled","otherProps","_objectWithoutProperties","_excluded","_jsxs","ButtonContainer","_objectSpread","_jsx","ClipLoader","size","loading","styled","button","_templateObject","_taggedTemplateLiteral","_ref2","theme","primary","_ref3","grey","_ref4","SlideBarContainer","leftToRight","keyframes","div","_templateObject2","background","slidebar","subline","style","PageHeadingContainer","SlideBar","secondary","onClick","CloseModalButtonContainer","GrClose","THEMES","useSelector","selectorTheme","useEffect","localStorage","setItem","dispatch","useDispatch","switchTheme","_useDarkTheme","useDarkTheme","_useDarkTheme2","_slicedToArray","themeToggler","ThemeTogglerContainer","MdNightlight","MdLightMode","card","_ref$to","to","navigate","useNavigate","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","render","setRender","createPortal","ModalContainer","onAnimationEnd","CloseModalButton","ThemeToggler","document","getElementById","slideTop","slideDown","_templateObject3","css","_templateObject4","_templateObject5","_ref$placeholder","placeholder","onChange","TextAreaContainer","textarea","border","_ref$type","type","_ref$name","name","TextFieldContainer","_ref5","_useState","useState","submitting","succeeded","error","_useState2","state","setState","_useState3","email","subjects","message","_template","_subject","_useState4","form","setForm","handleChange","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_e$target","value","wrap","_context","prev","next","target","prevState","_defineProperty","stop","_x","apply","arguments","ContactFormContainer","onSubmit","preventDefault","axios","post","then","catch","console","log","SnackBar","open","position","timeout","color","TextField","id","autoComplete","required","TextArea","Button","ContactIconsContainer","SiIonic","IoMapSharp","FaPhoneAlt","IoSend","ContactTypographyContainer","href","opacity","ContactDetailsContainer","ContactIcons","Separator","ContactTypography","span","ContactInfoContainer","ContactDetails","ContactSectionContainer","Left","ContactForm","Right","ContactInfo","Modal","ContactPageContainer","PageHeading","ContactSection","scrollBar"],"sourceRoot":""}