{"version":3,"file":"static/js/210.10881648.chunk.js","mappings":"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","sources":["components/SlideBar.jsx","components/PageHeading.jsx","components/modal/CloseModalButton.jsx","hooks/useDarkMode.js","components/modal/ThemeToggler.jsx","components/modal/Modal.jsx","hooks/usePagination.js","components/CustomPagination.jsx","components/projects/ProjectCard.jsx","components/projects/ProjectsList.jsx","components/projects/ProjectsSkeleton.jsx","components/projects/ProjectContent.jsx","pages/ProjectsPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst SlideBar = () => {\r\n  return (\r\n    <SlideBarContainer>\r\n      <span></span>\r\n      <span></span>\r\n    </SlideBarContainer>\r\n  );\r\n};\r\n\r\nexport default SlideBar;\r\n\r\nconst leftToRight = keyframes`\r\n  0% {\r\n    -webkit-transform: translateX(0);\r\n            transform: translateX(0);\r\n  }\r\n  100% {\r\n    -webkit-transform: translateX(100px);\r\n            transform: translateX(100px);\r\n\r\n  }\r\n`;\r\n\r\nconst SlideBarContainer = styled.div`\r\n  width: 100px;\r\n  height: 4px;\r\n  background-color: ${({ theme }) => theme.primary};\r\n  display: flex;\r\n  gap: 4px;\r\n\r\n  @media (max-width: 767.98px) {\r\n    width: 80px;\r\n  }\r\n\r\n  @media (max-width: 479.98px) {\r\n    width: 60px;\r\n  }\r\n\r\n  span {\r\n    height: 100%;\r\n    width: 4px;\r\n    background-color: ${({ theme }) => theme.background};\r\n    opacity: 1 !important;\r\n    animation: ${leftToRight} 3.5s linear forwards;\r\n    animation-iteration-count: infinite;\r\n\r\n    @media (max-width: 767.98px) {\r\n      animation: ${leftToRight} 3s linear forwards;\r\n      animation-iteration-count: infinite;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      animation: ${leftToRight} 2.5s linear forwards;\r\n      animation-iteration-count: infinite;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SlideBar from \"./SlideBar\";\r\n\r\nconst PageHeading = ({ slidebar, children, subline, style }) => {\r\n  return (\r\n    <PageHeadingContainer style={style}>\r\n      <span>{subline}</span>\r\n      <h2>{children}</h2>\r\n      {slidebar && <SlideBar />}\r\n    </PageHeadingContainer>\r\n  );\r\n};\r\n\r\nexport default PageHeading;\r\n\r\nconst PageHeadingContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-bottom: 15px;\r\n  span {\r\n    font-size: 14px;\r\n    font-style: Poppins, sans-serif;\r\n    color: ${({ theme }) => theme.secondary};\r\n    opacity: 0.7;\r\n    font-weight: 400;\r\n    @media (max-width: 767.98px) {\r\n      font-size: 11px;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 10px;\r\n    }\r\n  }\r\n  h2 {\r\n    color: ${({ theme }) => theme.secondary};\r\n    font-size: 46px;\r\n    font-weight: 700;\r\n    letter-spacing: -0.25px;\r\n    line-height: 100%;\r\n    margin-bottom: 20px;\r\n\r\n    @media (max-width: 767.98px) {\r\n      font-size: 32px;\r\n      font-weight: 600;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 24px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CloseModalButton = ({ onClick }) => {\r\n  return (\r\n    <CloseModalButtonContainer onClick={onClick}>\r\n      <GrClose size={30} />\r\n    </CloseModalButtonContainer>\r\n  );\r\n};\r\n\r\nexport default CloseModalButton;\r\n\r\nconst CloseModalButtonContainer = styled.div`\r\n  position: fixed;\r\n  cursor: pointer;\r\n  z-index: 999;\r\n  top: 30px;\r\n  right: 60px;\r\n  @media (max-width: 767.98px) {\r\n    right: 25px;\r\n  }\r\n\r\n  svg {\r\n    @media (max-width: 767.98px) {\r\n      height: 20px;\r\n      width: 20px;\r\n    }\r\n    path {\r\n      stroke: ${({ theme }) => theme.secondary};\r\n    }\r\n    :hover {\r\n      path {\r\n        stroke: ${({ theme }) => theme.primary};\r\n        transition: all 0.35s ease;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectorTheme, switchTheme } from \"../features/theme/themeSlice\";\r\n\r\nconst THEMES = {\r\n  LIGHT: \"light\",\r\n  DARK: \"dark\",\r\n};\r\n\r\nconst useDarkTheme = () => {\r\n  const theme = useSelector(selectorTheme);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", theme);\r\n  }, [theme]);\r\n  const dispatch = useDispatch();\r\n  const themeToggler = () => {\r\n    theme === THEMES.LIGHT\r\n      ? dispatch(switchTheme(THEMES.DARK))\r\n      : dispatch(switchTheme(THEMES.LIGHT));\r\n  };\r\n\r\n  return [theme, themeToggler];\r\n};\r\n\r\nexport default useDarkTheme;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MdLightMode, MdNightlight } from \"react-icons/md\";\r\nimport useDarkTheme from \"../../hooks/useDarkMode\";\r\n\r\nconst ThemeToggler = () => {\r\n  const [theme, themeToggler] = useDarkTheme();\r\n  return (\r\n    <ThemeTogglerContainer onClick={themeToggler}>\r\n      {theme === \"light\" ? (\r\n        <MdNightlight size={25} />\r\n      ) : (\r\n        <MdLightMode size={25} />\r\n      )}\r\n    </ThemeTogglerContainer>\r\n  );\r\n};\r\n\r\nexport default ThemeToggler;\r\nconst ThemeTogglerContainer = styled.div`\r\n  background-color: ${({ theme }) => theme.card};\r\n  box-shadow: 2px 6px 14px rgba(0, 0, 0, 0.2);\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  z-index: 999;\r\n\r\n  position: fixed;\r\n  right: 40px;\r\n  bottom: 30px;\r\n\r\n  @media (max-width: 767.98px) {\r\n    right: 20px;\r\n    bottom: 30px;\r\n  }\r\n\r\n  svg {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { css } from \"styled-components\";\r\nimport CloseModalButton from \"./CloseModalButton\";\r\nimport ThemeToggler from \"./ThemeToggler\";\r\n\r\nconst Modal = ({ children, to = \"/\" }) => {\r\n  const navigate = useNavigate();\r\n  const [show, setShow] = React.useState(true);\r\n  const [render, setRender] = React.useState(show);\r\n\r\n  const toggleShow = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (show) setRender(true);\r\n  }, [show]);\r\n\r\n  const onAnimationEnd = () => {\r\n    if (!show) navigate(to);\r\n  };\r\n\r\n  return createPortal(\r\n    render && (\r\n      <ModalContainer onAnimationEnd={onAnimationEnd} show={show}>\r\n        <CloseModalButton onClick={toggleShow} />\r\n        <ThemeToggler />\r\n        {children}\r\n      </ModalContainer>\r\n    ),\r\n    document.getElementById(\"modal_root\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nconst slideTop = keyframes`\r\n  0% {\r\n    -webkit-transform: translateY(100vh);\r\n            transform: translateY(100vh);\r\n  }\r\n  100% {\r\n    -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n  }\r\n`;\r\nconst slideDown = keyframes`\r\n  0% {\r\n    -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n  }\r\n  100% {\r\n    -webkit-transform: translateY(100vh);\r\n            transform: translateY(100vh);\r\n  }\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: ${({ theme }) => theme.background};\r\n  color: ${({ theme }) => theme.secondary};\r\n  animation: ${({ show }) =>\r\n    show\r\n      ? css`\r\n          ${slideTop} 0.75s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\r\n        `\r\n      : css`\r\n          ${slideDown} 0.75s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\r\n        `};\r\n`;\r\n","import { useMemo } from \"react\";\r\n\r\nexport const DOTS = \"...\";\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n  totalCount,\r\n  pageSize,\r\n  siblingCount = 1,\r\n  currentPage,\r\n}) => {\r\n  const paginationRange = useMemo(() => {\r\n    const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n    const totalPageNumbers = siblingCount + 5;\r\n\r\n    /*\r\n      If the number of pages is less than the page numbers we want to show in our\r\n      paginationComponent, we return the range [1..totalPageCount]\r\n    */\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n    const rightSiblingIndex = Math.min(\r\n      currentPage + siblingCount,\r\n      totalPageCount\r\n    );\r\n\r\n    /*\r\n      We do not want to show dots if there is only one position left \r\n      after/before the left/right page count as that would lead to a change if our Pagination\r\n      component size which we do not want\r\n    */\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount;\r\n      let leftRange = range(1, leftItemCount);\r\n\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    }\r\n\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount;\r\n      let rightRange = range(\r\n        totalPageCount - rightItemCount + 1,\r\n        totalPageCount\r\n      );\r\n      return [firstPageIndex, DOTS, ...rightRange];\r\n    }\r\n\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n    }\r\n  }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n  return paginationRange;\r\n};\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { usePagination, DOTS } from \"../hooks/usePagination\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CustomPagination = (props) => {\r\n  const {\r\n    onPageChange,\r\n    totalCount,\r\n    siblingCount = 1,\r\n    currentPage,\r\n    pageSize,\r\n    className,\r\n  } = props;\r\n\r\n  const paginationRange = usePagination({\r\n    currentPage,\r\n    totalCount,\r\n    siblingCount,\r\n    pageSize,\r\n  });\r\n\r\n  if (currentPage === 0 || paginationRange.length < 2) {\r\n    return null;\r\n  }\r\n\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  let lastPage = paginationRange[paginationRange.length - 1];\r\n  return (\r\n    <PaginationContainer>\r\n      <ul\r\n        className={classnames(\"pagination-container\", {\r\n          [className]: className,\r\n        })}\r\n      >\r\n        <li\r\n          className={classnames(\"pagination-item\", {\r\n            disabled: currentPage === 1,\r\n          })}\r\n          onClick={onPrevious}\r\n        >\r\n          <div className=\"arrow left\" />\r\n        </li>\r\n        {paginationRange.map((pageNumber, id) => {\r\n          if (pageNumber === DOTS) {\r\n            return (\r\n              <li key={id} className=\"pagination-item dots\">\r\n                &#8230;\r\n              </li>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <li\r\n              key={id}\r\n              className={classnames(\"pagination-item\", {\r\n                selected: pageNumber === currentPage,\r\n              })}\r\n              onClick={() => onPageChange(pageNumber)}\r\n            >\r\n              {pageNumber}\r\n            </li>\r\n          );\r\n        })}\r\n        <li\r\n          className={classnames(\"pagination-item\", {\r\n            disabled: currentPage === lastPage,\r\n          })}\r\n          onClick={onNext}\r\n        >\r\n          <div className=\"arrow right\" />\r\n        </li>\r\n      </ul>\r\n    </PaginationContainer>\r\n  );\r\n};\r\n\r\nexport default CustomPagination;\r\n\r\nconst PaginationContainer = styled.div`\r\n  display: flex;\r\n  .pagination-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    list-style-type: none;\r\n    flex-wrap: wrap;\r\n\r\n    .pagination-item {\r\n      display: flex;\r\n      height: 32px;\r\n      text-align: center;\r\n      margin: auto 4px;\r\n      margin-bottom: 4px;\r\n      color: ${({ theme }) => theme.secondary};\r\n      box-sizing: border-box;\r\n      align-items: center;\r\n      justify-content: center;\r\n      letter-spacing: 0.01071em;\r\n      border-radius: 16px;\r\n      font-size: 13px;\r\n      min-width: 32px;\r\n\r\n      &.dots:hover {\r\n        background-color: transparent;\r\n        cursor: default;\r\n      }\r\n      &:hover {\r\n        background-color: ${({ theme }) => theme.primary}dd;\r\n        cursor: pointer;\r\n      }\r\n\r\n      &.selected {\r\n        background-color: ${({ theme }) => theme.primary};\r\n        color: ${({ theme }) => theme.grey[100]}dd;\r\n      }\r\n\r\n      .arrow {\r\n        &::before {\r\n          position: relative;\r\n          content: \"\";\r\n          /* By using an em scale, the arrows will size with the font */\r\n          display: inline-block;\r\n          width: 0.5em;\r\n          height: 0.5em;\r\n          border-right: 0.12em solid ${({ theme }) => theme.secondary}dd;\r\n          border-top: 0.12em solid ${({ theme }) => theme.secondary}dd;\r\n        }\r\n\r\n        &.left {\r\n          transform: rotate(-135deg);\r\n        }\r\n\r\n        &.right {\r\n          transform: rotate(45deg);\r\n        }\r\n      }\r\n\r\n      &.disabled {\r\n        pointer-events: none;\r\n\r\n        .arrow::before {\r\n          border-right: 0.12em solid ${({ theme }) => theme.secondary}6d;\r\n          border-top: 0.12em solid ${({ theme }) => theme.secondary}6d;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: transparent;\r\n          cursor: default;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { VscGithubInverted } from \"react-icons/vsc\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\n\r\nconst ProjectCard = ({ name, html_url, created_at, id }) => {\r\n  const [imageLoad, setImageLoad] = useState(false);\r\n  const theme = useTheme();\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const handleImageLoad = () => {\r\n    setImageLoad(true);\r\n  };\r\n\r\n  return (\r\n    <ProjectCardContainer>\r\n      <ImageContainer>\r\n        {!imageLoad && (\r\n          <Skeleton\r\n            baseColor={theme.skeletonBase}\r\n            highlightColor={theme.skeletonHighlight}\r\n            height=\"100%\"\r\n            style={{\r\n              lineHeight: \"1\",\r\n            }}\r\n          />\r\n        )}\r\n        <img\r\n          src={`https://picsum.photos/350/200?${Math.floor(\r\n            Math.random() * 10 * id\r\n          )}`}\r\n          alt=\"cover\"\r\n          onLoad={handleImageLoad}\r\n        />\r\n        <span></span>\r\n        <DateContainer>\r\n          {`${new Date(created_at).getDate()} ${\r\n            monthNames[new Date(created_at).getMonth()]\r\n          }, ${new Date(created_at).getUTCFullYear()}`}\r\n        </DateContainer>\r\n      </ImageContainer>\r\n      <TypographyContainer>\r\n        <h4>{name.length > 30 ? `${name.substring(0, 30)}...` : name}</h4>\r\n        <a href={html_url} target=\"_blank\" rel=\"noreferrer\">\r\n          <VscGithubInverted size={20} />\r\n          <span>View Code</span>\r\n        </a>\r\n      </TypographyContainer>\r\n    </ProjectCardContainer>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n\r\nconst DateContainer = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  background-color: ${({ theme }) => theme.primary};\r\n  color: ${({ theme }) => theme.grey[100]};\r\n  padding: 5px 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 13px;\r\n  font-weight: 500;\r\n  @media (max-width: 767.98px) {\r\n    font-size: 10px;\r\n  }\r\n  @media (max-width: 479.98px) {\r\n    font-size: 8px;\r\n  }\r\n`;\r\nconst TypographyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding-left: 10px;\r\n  flex: 0.2;\r\n\r\n  a {\r\n    background-color: ${({ theme }) => theme.primary};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 10px;\r\n    padding: 8px 15px;\r\n    border-radius: 25px;\r\n    align-self: flex-start;\r\n    cursor: pointer;\r\n    color: ${({ theme }) => theme.grey[100]};\r\n    font-size: 12px;\r\n    text-decoration: none;\r\n\r\n    :hover {\r\n      box-shadow: 4px 10px 14px rgba(0, 171, 85, 0.15);\r\n      transition: all 0.25s ease-in-out;\r\n    }\r\n    @media (max-width: 767.98px) {\r\n      padding: 6px 12px;\r\n      font-size: 10px;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      padding: 4px 10px;\r\n      font-size: 8px;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  h4 {\r\n    font-weight: 500;\r\n    font-size: 17px;\r\n    line-height: 1.2;\r\n    align-self: flex-start;\r\n    text-transform: uppercase;\r\n    color: ${({ theme }) => theme.secondary};\r\n\r\n    @media (max-width: 767.98px) {\r\n      font-size: 14px;\r\n      text-transform: uppercase;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 11px;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  flex: 0.8;\r\n  height: 100%;\r\n  width: 100%;\r\n  position: relative;\r\n  background-color: red;\r\n  img {\r\n    object-fit: cover;\r\n    background-color: transparent;\r\n    vertical-align: middle;\r\n    border-radius: 0.25rem;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  span {\r\n    overflow: hidden;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    flex: 1;\r\n    flex: 1;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: linear-gradient(\r\n      45deg,\r\n      ${({ theme }) => theme.darker} 30%,\r\n      ${({ theme }) => theme.light} 90%\r\n    );\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst ProjectCardContainer = styled.div`\r\n  background-color: ${({ theme }) => theme.card};\r\n  border-bottom: 2px solid transparent;\r\n  box-shadow: 2px 6px 14px rgba(0, 0, 0, 0.2);\r\n  transition: all 0.35s ease-in-out;\r\n  width: 354px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  padding-bottom: 10px;\r\n\r\n  @media (max-width: 375.98px) {\r\n    width: 250px;\r\n  }\r\n  :hover {\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ProjectsList = ({ children }) => {\r\n  return <ProjectsListContainer>{children}</ProjectsListContainer>;\r\n};\r\n\r\nexport default ProjectsList;\r\n\r\nconst ProjectsListContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  height: 100%;\r\n\r\n  h1 {\r\n    font-weight: 500;\r\n    font-size: 26px;\r\n    line-height: 1.2;\r\n    margin-bottom: 20px;\r\n    color: ${({ theme }) => theme.secondary};\r\n\r\n    @media (max-width: 767.98px) {\r\n      font-size: 20px;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 18px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\n\r\nconst ProjectsSkeleton = () => {\r\n  const theme = useTheme();\r\n  return (\r\n    <ProjectsSkeletonContainer>\r\n      <ImageContainer>\r\n        <Skeleton\r\n          baseColor={theme.skeletonBase}\r\n          highlightColor={theme.skeletonHighlight}\r\n          height=\"100%\"\r\n          style={{\r\n            lineHeight: \"1\",\r\n          }}\r\n        />\r\n      </ImageContainer>\r\n      <TypographyContainer>\r\n        <Skeleton\r\n          baseColor={theme.skeletonBase}\r\n          highlightColor={theme.skeletonHighlight}\r\n          count={2}\r\n          style={{\r\n            lineHeight: \"0.7\",\r\n          }}\r\n        />\r\n      </TypographyContainer>\r\n    </ProjectsSkeletonContainer>\r\n  );\r\n};\r\n\r\nexport default ProjectsSkeleton;\r\n\r\nconst ImageContainer = styled.div`\r\n  flex: 0.8;\r\n`;\r\nconst TypographyContainer = styled.div`\r\n  flex: 0.2;\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst ProjectsSkeletonContainer = styled.div`\r\n  background-color: ${({ theme }) => theme.card};\r\n  box-shadow: 2px 6px 14px rgba(0, 0, 0, 0.2);\r\n  transition: all 0.35s ease-in-out;\r\n  width: 354px;\r\n  height: 230px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  padding-bottom: 10px;\r\n\r\n  @media (max-width: 375.98px) {\r\n    width: 250px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  fetchRepos,\r\n  selectorRepos,\r\n  selectorReposLoading,\r\n} from \"../../features/repos/reposSlice\";\r\nimport CustomPagination from \"../CustomPagination\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport ProjectsList from \"./ProjectsList\";\r\nimport ProjectsSkeleton from \"./ProjectsSkeleton\";\r\n\r\nconst ProjectContent = () => {\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [REPOS_PER_PAGE] = useState(3);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchRepos());\r\n  }, [dispatch]);\r\n\r\n  const reposLoading = useSelector(selectorReposLoading);\r\n  const repos = useSelector(selectorRepos);\r\n\r\n  const currentRepos = React.useMemo(() => {\r\n    const firstPageIndex = (currentPage - 1) * REPOS_PER_PAGE;\r\n    const lastPageIndex = firstPageIndex + REPOS_PER_PAGE;\r\n    return repos.slice(firstPageIndex, lastPageIndex);\r\n  }, [currentPage, repos, REPOS_PER_PAGE]);\r\n\r\n  return (\r\n    <ProjectContentContainer>\r\n      <ProjectsList>\r\n        {reposLoading ? (\r\n          <>\r\n            <ProjectsSkeleton />\r\n            <ProjectsSkeleton />\r\n            <ProjectsSkeleton />\r\n          </>\r\n        ) : currentRepos?.length ? (\r\n          currentRepos?.map((repo, id) => (\r\n            <ProjectCard\r\n              id={id}\r\n              key={id}\r\n              name={repo.name}\r\n              html_url={repo.html_url}\r\n              created_at={repo.created_at}\r\n            />\r\n          ))\r\n        ) : (\r\n          <h1>No project found!</h1>\r\n        )}\r\n      </ProjectsList>\r\n      <PaginationWrapper>\r\n        {!reposLoading && (\r\n          <CustomPagination\r\n            className=\"pagination-bar\"\r\n            currentPage={currentPage}\r\n            totalCount={repos.length}\r\n            pageSize={REPOS_PER_PAGE}\r\n            onPageChange={(page) => setCurrentPage(page)}\r\n          />\r\n        )}\r\n      </PaginationWrapper>\r\n    </ProjectContentContainer>\r\n  );\r\n};\r\n\r\nexport default ProjectContent;\r\n\r\nconst PaginationWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 60px;\r\n`;\r\n\r\nconst ProjectContentContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 60px;\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  width: 100%;\r\n  flex: 1;\r\n\r\n  @media (max-width: 1023.98px) {\r\n    gap: 40px;\r\n  }\r\n  @media (max-width: 767.98px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 30px;\r\n  }\r\n  @media (max-width: 479.98px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"../components/modal/Modal\";\r\nimport PageHeading from \"../components/PageHeading\";\r\nimport ProjectContent from \"../components/projects/ProjectContent\";\r\n\r\nconst ProjectsPage = () => {\r\n  return (\r\n    <Modal>\r\n      <ProjectsPageContainer>\r\n        <PageHeading subline={\"Showcasing some of my recent projects\"} slidebar>\r\n          Projects\r\n        </PageHeading>\r\n        <ProjectContent />\r\n      </ProjectsPageContainer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ProjectsPage;\r\n\r\nconst ProjectsPageContainer = styled.div`\r\n  overflow-y: scroll;\r\n  max-height: 100vh;\r\n  padding: 0 550px;\r\n  padding-top: 60px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  gap: 20px;\r\n  flex: 1;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  @media (max-width: 2559.98px) {\r\n    padding: 0 260px;\r\n    padding-top: 50px;\r\n  }\r\n  @media (max-width: 1439.98px) {\r\n    padding: 0 120px;\r\n    padding-top: 60px;\r\n  }\r\n  @media (max-width: 1023.98px) {\r\n    padding: 0 100px;\r\n    padding-top: 60px;\r\n  }\r\n  @media (max-width: 767.98px) {\r\n    padding: 0 40px;\r\n    padding-top: 60px;\r\n  }\r\n  @media (max-width: 479.98px) {\r\n    padding: 0 30px;\r\n    padding-top: 60px;\r\n  }\r\n\r\n  @media (max-width: 424.98px) {\r\n    padding: 0 15px;\r\n    padding-top: 60px;\r\n  }\r\n\r\n  /* overflow-x: hidden; */\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    background: transparent;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${({ theme }) => theme.scrollBar};\r\n    border-radius: 5px;\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n"],"names":["_jsxs","SlideBarContainer","children","_jsx","leftToRight","keyframes","_templateObject","_taggedTemplateLiteral","styled","div","_templateObject2","_ref","theme","primary","_ref2","background","slidebar","subline","style","PageHeadingContainer","SlideBar","secondary","_ref3","onClick","CloseModalButtonContainer","GrClose","size","THEMES","useSelector","selectorTheme","useEffect","localStorage","setItem","dispatch","useDispatch","switchTheme","_useDarkTheme","useDarkTheme","_useDarkTheme2","_slicedToArray","themeToggler","ThemeTogglerContainer","MdNightlight","MdLightMode","card","_ref$to","to","navigate","useNavigate","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","render","setRender","createPortal","ModalContainer","onAnimationEnd","CloseModalButton","ThemeToggler","document","getElementById","slideTop","slideDown","_templateObject3","_ref4","css","_templateObject4","_templateObject5","DOTS","range","start","end","length","Array","from","_","idx","props","onPageChange","totalCount","_props$siblingCount","siblingCount","currentPage","pageSize","className","paginationRange","_ref$siblingCount","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","concat","_toConsumableArray","rightRange","middleRange","usePagination","lastPage","PaginationContainer","classnames","_defineProperty","disabled","map","pageNumber","id","selected","grey","_ref5","_ref6","_ref7","_ref8","name","html_url","created_at","_useState","useState","_useState2","imageLoad","setImageLoad","useTheme","ProjectCardContainer","ImageContainer","Skeleton","baseColor","skeletonBase","highlightColor","skeletonHighlight","height","lineHeight","src","floor","random","alt","onLoad","DateContainer","Date","getDate","getMonth","getUTCFullYear","TypographyContainer","substring","href","target","rel","VscGithubInverted","darker","light","_ref9","_ref10","ProjectsListContainer","ProjectsSkeletonContainer","count","setCurrentPage","_useState3","REPOS_PER_PAGE","fetchRepos","reposLoading","selectorReposLoading","repos","selectorRepos","currentRepos","slice","ProjectContentContainer","ProjectsList","_Fragment","ProjectsSkeleton","repo","ProjectCard","PaginationWrapper","CustomPagination","page","Modal","ProjectsPageContainer","PageHeading","ProjectContent","scrollBar"],"sourceRoot":""}