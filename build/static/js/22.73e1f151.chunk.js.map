{"version":3,"file":"static/js/22.73e1f151.chunk.js","mappings":"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","sources":["components/SlideBar.jsx","components/PageHeading.jsx","components/modal/CloseModalButton.jsx","hooks/useDarkMode.js","components/modal/ThemeToggler.jsx","components/modal/Modal.jsx","pages/BlogPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst SlideBar = () => {\r\n  return (\r\n    <SlideBarContainer>\r\n      <span></span>\r\n      <span></span>\r\n    </SlideBarContainer>\r\n  );\r\n};\r\n\r\nexport default SlideBar;\r\n\r\nconst leftToRight = keyframes`\r\n  0% {\r\n    -webkit-transform: translateX(0);\r\n            transform: translateX(0);\r\n  }\r\n  100% {\r\n    -webkit-transform: translateX(100px);\r\n            transform: translateX(100px);\r\n\r\n  }\r\n`;\r\n\r\nconst SlideBarContainer = styled.div`\r\n  width: 100px;\r\n  height: 4px;\r\n  background-color: ${({ theme }) => theme.primary};\r\n  display: flex;\r\n  gap: 4px;\r\n\r\n  @media (max-width: 767.98px) {\r\n    width: 80px;\r\n  }\r\n\r\n  @media (max-width: 479.98px) {\r\n    width: 60px;\r\n  }\r\n\r\n  span {\r\n    height: 100%;\r\n    width: 4px;\r\n    background-color: ${({ theme }) => theme.background};\r\n    opacity: 1 !important;\r\n    animation: ${leftToRight} 3.5s linear forwards;\r\n    animation-iteration-count: infinite;\r\n\r\n    @media (max-width: 767.98px) {\r\n      animation: ${leftToRight} 3s linear forwards;\r\n      animation-iteration-count: infinite;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      animation: ${leftToRight} 2.5s linear forwards;\r\n      animation-iteration-count: infinite;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SlideBar from \"./SlideBar\";\r\n\r\nconst PageHeading = ({ slidebar, children, subline, style }) => {\r\n  return (\r\n    <PageHeadingContainer style={style}>\r\n      <span>{subline}</span>\r\n      <h2>{children}</h2>\r\n      {slidebar && <SlideBar />}\r\n    </PageHeadingContainer>\r\n  );\r\n};\r\n\r\nexport default PageHeading;\r\n\r\nconst PageHeadingContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-bottom: 15px;\r\n  span {\r\n    font-size: 14px;\r\n    font-style: Poppins, sans-serif;\r\n    color: ${({ theme }) => theme.secondary};\r\n    opacity: 0.7;\r\n    font-weight: 400;\r\n    @media (max-width: 767.98px) {\r\n      font-size: 11px;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 10px;\r\n    }\r\n  }\r\n  h2 {\r\n    color: ${({ theme }) => theme.secondary};\r\n    font-size: 46px;\r\n    font-weight: 700;\r\n    letter-spacing: -0.25px;\r\n    line-height: 100%;\r\n    margin-bottom: 20px;\r\n\r\n    @media (max-width: 767.98px) {\r\n      font-size: 32px;\r\n      font-weight: 600;\r\n    }\r\n    @media (max-width: 479.98px) {\r\n      font-size: 24px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CloseModalButton = ({ onClick }) => {\r\n  return (\r\n    <CloseModalButtonContainer onClick={onClick}>\r\n      <GrClose size={30} />\r\n    </CloseModalButtonContainer>\r\n  );\r\n};\r\n\r\nexport default CloseModalButton;\r\n\r\nconst CloseModalButtonContainer = styled.div`\r\n  position: fixed;\r\n  cursor: pointer;\r\n  z-index: 999;\r\n  top: 30px;\r\n  right: 60px;\r\n  @media (max-width: 767.98px) {\r\n    right: 25px;\r\n  }\r\n\r\n  svg {\r\n    @media (max-width: 767.98px) {\r\n      height: 20px;\r\n      width: 20px;\r\n    }\r\n    path {\r\n      stroke: ${({ theme }) => theme.secondary};\r\n    }\r\n    :hover {\r\n      path {\r\n        stroke: ${({ theme }) => theme.primary};\r\n        transition: all 0.35s ease;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectorTheme, switchTheme } from \"../features/theme/themeSlice\";\r\n\r\nconst THEMES = {\r\n  LIGHT: \"light\",\r\n  DARK: \"dark\",\r\n};\r\n\r\nconst useDarkTheme = () => {\r\n  const theme = useSelector(selectorTheme);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", theme);\r\n  }, [theme]);\r\n  const dispatch = useDispatch();\r\n  const themeToggler = () => {\r\n    theme === THEMES.LIGHT\r\n      ? dispatch(switchTheme(THEMES.DARK))\r\n      : dispatch(switchTheme(THEMES.LIGHT));\r\n  };\r\n\r\n  return [theme, themeToggler];\r\n};\r\n\r\nexport default useDarkTheme;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MdLightMode, MdNightlight } from \"react-icons/md\";\r\nimport useDarkTheme from \"../../hooks/useDarkMode\";\r\n\r\nconst ThemeToggler = () => {\r\n  const [theme, themeToggler] = useDarkTheme();\r\n  return (\r\n    <ThemeTogglerContainer onClick={themeToggler}>\r\n      {theme === \"light\" ? (\r\n        <MdNightlight size={25} />\r\n      ) : (\r\n        <MdLightMode size={25} />\r\n      )}\r\n    </ThemeTogglerContainer>\r\n  );\r\n};\r\n\r\nexport default ThemeToggler;\r\nconst ThemeTogglerContainer = styled.div`\r\n  background-color: ${({ theme }) => theme.card};\r\n  box-shadow: 2px 6px 14px rgba(0, 0, 0, 0.2);\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  z-index: 999;\r\n\r\n  position: fixed;\r\n  right: 40px;\r\n  bottom: 30px;\r\n\r\n  @media (max-width: 767.98px) {\r\n    right: 20px;\r\n    bottom: 30px;\r\n  }\r\n\r\n  svg {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { css } from \"styled-components\";\r\nimport CloseModalButton from \"./CloseModalButton\";\r\nimport ThemeToggler from \"./ThemeToggler\";\r\n\r\nconst Modal = ({ children, to = \"/\" }) => {\r\n  const navigate = useNavigate();\r\n  const [show, setShow] = React.useState(true);\r\n  const [render, setRender] = React.useState(show);\r\n\r\n  const toggleShow = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (show) setRender(true);\r\n  }, [show]);\r\n\r\n  const onAnimationEnd = () => {\r\n    if (!show) navigate(to);\r\n  };\r\n\r\n  return createPortal(\r\n    render && (\r\n      <ModalContainer onAnimationEnd={onAnimationEnd} show={show}>\r\n        <CloseModalButton onClick={toggleShow} />\r\n        <ThemeToggler />\r\n        {children}\r\n      </ModalContainer>\r\n    ),\r\n    document.getElementById(\"modal_root\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nconst slideTop = keyframes`\r\n  0% {\r\n    -webkit-transform: translateY(100vh);\r\n            transform: translateY(100vh);\r\n  }\r\n  100% {\r\n    -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n  }\r\n`;\r\nconst slideDown = keyframes`\r\n  0% {\r\n    -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n  }\r\n  100% {\r\n    -webkit-transform: translateY(100vh);\r\n            transform: translateY(100vh);\r\n  }\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: ${({ theme }) => theme.background};\r\n  color: ${({ theme }) => theme.secondary};\r\n  animation: ${({ show }) =>\r\n    show\r\n      ? css`\r\n          ${slideTop} 0.75s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\r\n        `\r\n      : css`\r\n          ${slideDown} 0.75s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\r\n        `};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Modal from \"../components/modal/Modal\";\r\nimport PageHeading from \"../components/PageHeading\";\r\n\r\nconst BlogPage = () => {\r\n  return (\r\n    <Modal>\r\n      <BlogPageContainer>\r\n        <PageHeading subline={\"Coming Soon\"} slidebar>\r\n          My Blog\r\n        </PageHeading>\r\n      </BlogPageContainer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BlogPage;\r\n\r\nconst BlogPageContainer = styled.div`\r\n  overflow-y: scroll;\r\n  max-height: 100vh;\r\n  padding: 0 550px;\r\n  padding-top: 60px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  gap: 20px;\r\n  flex: 1;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  @media (max-width: 2559.98px) {\r\n    padding: 0 260px;\r\n    padding-top: 50px;\r\n  }\r\n  @media (max-width: 1439.98px) {\r\n    padding: 0 120px;\r\n    padding-top: 60px;\r\n  }\r\n  @media (max-width: 1023.98px) {\r\n    padding: 0 100px;\r\n    padding-top: 60px;\r\n  }\r\n  @media (max-width: 767.98px) {\r\n    padding: 0 40px;\r\n    padding-top: 60px;\r\n  }\r\n  @media (max-width: 479.98px) {\r\n    padding: 0 30px;\r\n    padding-top: 60px;\r\n  }\r\n\r\n  @media (max-width: 424.98px) {\r\n    padding: 0 15px;\r\n    padding-top: 60px;\r\n  }\r\n\r\n  /* overflow-x: hidden; */\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    background: transparent;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${({ theme }) => theme.scrollBar};\r\n    border-radius: 5px;\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n"],"names":["_jsxs","SlideBarContainer","children","_jsx","leftToRight","keyframes","_templateObject","_taggedTemplateLiteral","styled","div","_templateObject2","_ref","theme","primary","_ref2","background","slidebar","subline","style","PageHeadingContainer","SlideBar","secondary","_ref3","onClick","CloseModalButtonContainer","GrClose","size","THEMES","useSelector","selectorTheme","useEffect","localStorage","setItem","dispatch","useDispatch","switchTheme","_useDarkTheme","useDarkTheme","_useDarkTheme2","_slicedToArray","themeToggler","ThemeTogglerContainer","MdNightlight","MdLightMode","card","_ref$to","to","navigate","useNavigate","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","render","setRender","createPortal","ModalContainer","onAnimationEnd","CloseModalButton","ThemeToggler","document","getElementById","slideTop","slideDown","_templateObject3","_ref4","css","_templateObject4","_templateObject5","Modal","BlogPageContainer","PageHeading","scrollBar"],"sourceRoot":""}